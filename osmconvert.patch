diff --git a/osmconvert.c b/osmconvert.c
index 4c701ab..ba09a9d 100644
--- a/osmconvert.c
+++ b/osmconvert.c
@@ -117,7 +117,7 @@ const char* helptext=
 "\n"
 "--in-josm\n"
 "        XML data shall be accepted in JOSM format: apostrophe instead\n"
-"        of qoutes.\n"
+"        of qoutes. No longer required as either format parsed\n"
 "\n"
 "--merge-versions\n"
 "        Some .osc files contain different versions of one object.\n"
@@ -348,7 +348,7 @@ static char global_tempfilename[350]= "osmconvert_tempfile";
   fprintf(stderr,"osmconvert: " f "\n"); // print info message
 #define ONAME(i) \
   (i==0? "node": i==1? "way": i==2? "relation": "unknown object")
-#define global_fileM 400  // maximum number of input files
+#define global_fileM 1002  // maximum number of input files
 
 //------------------------------------------------------------
 // end   Module Global   global variables for this program
@@ -1456,12 +1456,6 @@ static inline bool read_input() {
       break;
           }
         read__counter+= r;
-        if(global_injosm) {
-          byte* bp;
-
-          bp= read_bufe+r;
-          while(--bp>=read_bufe) if(*bp=='\'') *bp= '\"';
-          }
         read_bufe+= r;  // set new mark for end of data
         read_bufe[0]= 0; read_bufe[1]= 0;  // set 4 null-terminators
         read_bufe[2]= 0; read_bufe[3]= 0;
@@ -3225,7 +3219,7 @@ return 0;
 static char rr__filename[400]= "";
 static int rr__fd= -1;  // file descriptor for temporary file
 #define rr__bufM 400000
-static int32_t rr__buf[rr__bufM],*rr__bufp,*rr__bufe,*rr__bufee;
+static int64_t rr__buf[rr__bufM],*rr__bufp,*rr__bufe,*rr__bufee;
   // buffer - used for write, and later for read;
 static bool rr__writemode;  // buffer is used for writing
 
@@ -3236,7 +3230,7 @@ return;
   rr__bufp= rr__buf;
   }  // end   rr__flush()
 
-static inline void rr__write(int32_t i) {
+static inline void rr__write(int64_t i) {
   // write an int to tempfile, use a buffer;
   if(rr__bufp>=rr__bufee) rr__flush();
   *rr__bufp++= i;
@@ -3275,13 +3269,13 @@ return 1;
   return 0;
   }  // end   rr_ini()
 
-static inline void rr_rel(int32_t relid) {
+static inline void rr_rel(int64_t relid) {
   // store the id of a relation in tempfile;
   rr__write(0);
   rr__write(relid);
   } // end   rr_rel()
 
-static inline void rr_ref(int32_t refid) {
+static inline void rr_ref(int64_t refid) {
   // store the id of an interrelation reference in tempfile;
   rr__write(refid);
   } // end   rr_ref()
@@ -3299,13 +3293,10 @@ return 1;
   return 0;
   } // end   rr_rewind()
 
-static inline int rr_read(int32_t* ip) {
+static inline int rr_read(int64_t* ip) {
   // read one integer; meaning of the values of these integers:
   // every value is an interrelation reference id, with one exception:
   // integers which follow a 0-integer directly are relation ids;
-  // note that we take 32-bit-integers instead of the 64-bit-integers
-  // we usually take for object ids; this is because the range of
-  // relation ids will not exceed the 2^15 range in near future;
   // return: ==0: ok; !=0: eof;
   int r,r2;
 
@@ -3313,13 +3304,13 @@ static inline int rr_read(int32_t* ip) {
     r= read(rr__fd,rr__buf,sizeof(rr__buf));
     if(r<=0)
 return 1;
-    rr__bufe= (int32_t*)((char*)rr__buf+r);
-    if((r%4)!=0) { // odd number of bytes
-      r2= read(rr__fd,rr__bufe,4-(r%4));  // request the missing bytes
+    rr__bufe= (int64_t*)((char*)rr__buf+r);
+    if((r%8)!=0) { // odd number of bytes
+      r2= read(rr__fd,rr__bufe,8-(r%8));  // request the missing bytes
       if(r2<=0)  // did not get the missing bytes
-        rr__bufe= (int32_t*)((char*)rr__bufe-(r%4));
+        rr__bufe= (int64_t*)((char*)rr__bufe-(r%8));
       else
-        rr__bufe= (int32_t*)((char*)rr__bufe+r2);
+        rr__bufe= (int64_t*)((char*)rr__bufe+r2);
       }
     rr__bufp= rr__buf;
     }
@@ -4613,8 +4604,8 @@ static void oo__rrprocessing(int* maxrewindp) {
     // if none of the relations' flags has been changed,
     // this procedure will end;
   int h;
-  int32_t relid;  // relation id;
-  int32_t refid;  // interrelation reference id;
+  int64_t relid;  // relation id;
+  int64_t refid;  // interrelation reference id;
   bool flag;
 
   h= 0;
@@ -4999,12 +4990,12 @@ return true;
   continue;
       }
     *read_bufp++= 0;
-    if(*read_bufp!='\"')
+    if(*read_bufp!= '\"' && *read_bufp!= '\'')
   continue;
     oo__xmlval= (char*)(++read_bufp);
     for(;;) {
       c= *read_bufp;
-      if(c=='\"')
+      if(c=='\"' || c=='\'' )
     break;
       if(c==0) {
       oo__xmlkey= oo__xmlval= "";
@@ -5316,7 +5307,7 @@ return 1;
     break;
         } while(*s!=' ');
       while(*s==' ') s++;
-      if(s[0]=='i' && s[1]=='d' && s[2]=='=' && s[3]=='\"') {  // found id
+      if(s[0]=='i' && s[1]=='d' && s[2]=='=' && ( s[3]== '\"' ||  s[3]== '\'')) {  // found id
         oo__ifp->tyid= r+oo__strtosint64(s+4);
         if(!global_diff)
 return 0;
@@ -5326,7 +5317,7 @@ return 0;
 return 0;
           if(s[0]==' ' && s[1]=='v' && s[2]=='e' && s[3]=='r' &&
               s[4]=='s' && s[5]=='i' && s[6]=='o' && s[7]=='n' &&
-              s[8]=='=' && s[9]=='\"' && isdig(s[10])) {
+              s[8]=='=' &&  (s[9]=='\"' || s[9]=='\'') && isdig(s[10])) {
               // found version
             oo__ifp->hisver= oo__strtouint32(s+10);
 return 0;
@@ -5416,6 +5407,10 @@ return 5;
           // call some initialization of string read module
         }
       else {  // unknown file format
+	int i;
+
+	for(i=0; i< 16; i++)
+		fprintf(stderr, "%02x ", *(bufp+i));
         PERRv("unknown file format: %.80s",oo__ifp->filename)
 return 3;
         }
@@ -5564,7 +5559,7 @@ static bool oo_open(const char* filename) {
   static bool firstrun= true;
 
   if(oo__ife>=oo__ifee) {
-    fprintf(stderr,"osmconvert Error: too many input files.\n");
+    fprintf(stderr,"osmconvert Error: too many input files. %d \n", oo__ife-oo__if);
 return 2;
     }
   if(read_open(filename)!=0)
@@ -6487,7 +6482,7 @@ return 24;
             rt= *reftypep;
             if(rt==2) {  // referenced object is a relation
               if(!idwritten) {  // did not yet write our relation's id
-                rr_rel((int32_t)id);  // write it now
+                rr_rel(id);  // write it now
                 idwritten= true;
                 }
               rr_ref(ri);
@@ -6848,7 +6843,7 @@ return 0;
         // border consideration by a bounding box
       if(!border_box(a+3)) {
         fprintf(stderr,"osmconvert Error: use border format: "
-          " -b\"x1,y1,x2,y2\"\n");
+          " -b=\"x1,y1,x2,y2\"\n");
 return 3;
         }  // end   border consideration by a bounding box
       continue;  // take next parameter
